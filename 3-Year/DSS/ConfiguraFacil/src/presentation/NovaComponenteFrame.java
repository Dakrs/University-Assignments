/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import java.awt.event.*;
import java.beans.*;
import business.ConfiguraFacil;
import business.gConfig.Componente;

import java.security.spec.ECField;
import java.util.List;
import java.util.ArrayList;

import java.awt.*;
import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.table.*;

/**
 *
 * @author Pedro
 */
public class NovaComponenteFrame extends javax.swing.JFrame {

    ConfiguraFacil cf;
    TabelaStock root;

    /**
     * Creates new form NovaComponenteFrame
     */
    public NovaComponenteFrame(ConfiguraFacil cf, TabelaStock root) {
        initComponents();
        this.cf = cf;
        this.root = root;
        updateTabel();
    }

    private void table1PropertyChange(PropertyChangeEvent e) {
        if (e.getPropertyName().equals("tableCellEditor")) {

            int rows = table1.getRowCount();
            Object v1, v2;
            for (int i = 0; i < rows; i++) {
                v1 = table1.getValueAt(i, 2);
                v2 = table1.getValueAt(i, 3);
                if (v1 != null && v2 != null){
                    if ((boolean) v1 && (boolean) v2){
                        table1.setValueAt(false,i,3);
                    }
                }
            }
        }
    }

    private void sair_btnActionPerformed(ActionEvent e) {
        JOptionPane.showOptionDialog(new JFrame(), "A seleção foi cancelada", "Sair", JOptionPane.DEFAULT_OPTION, JOptionPane.DEFAULT_OPTION, null, null, null);
        this.dispose();
    }

    private void adicionar_btnActionPerformed(ActionEvent e) {
        List<Componente> complementares = new ArrayList<>();
        List<Componente> incompativeis = new ArrayList<>();

        int rows = table1.getRowCount();

        Object v1;
        for(int i = 0; i < rows; i++){
            v1 = table1.getValueAt(i,2);
            if (v1 != null){
                if ((boolean) v1){
                    Componente c = this.cf.getComponente((int) table1.getValueAt(i,0));
                    if (c != null)
                        complementares.add(c);
                }
            }
            else if ((v1 = table1.getValueAt(i,3)) != null){
                if ((boolean) v1){
                    Componente c = this.cf.getComponente((int) table1.getValueAt(i,0));
                    if (c != null)
                        incompativeis.add(c);
                }
            }
        }


        try {
            int i = this.cf.adicionarComponente(nome_txt.getText(), Double.parseDouble(preco_txt.getText()), matchType(jComboBox1.getSelectedItem().toString()), complementares, incompativeis);
            this.dispose();
            root.updateTable();
            new EncomendaStockFame(this.cf, root, i).setVisible(true);
        }
        catch (NumberFormatException t){
            JOptionPane.showOptionDialog(new JFrame(), "Erro no input", "", JOptionPane.DEFAULT_OPTION, JOptionPane.DEFAULT_OPTION, null, null, null);
            this.dispose();
            new TabelaStock(this.cf).setVisible(true);
        }
        catch (Exception k){
            this.dispose();
            new TabelaStock(this.cf).setVisible(true);
        }
    }

    private int matchType(String msg){
        String [] args = msg.split(" ");

        int i = -1;
        switch (args[0]){
            case "1": i = 1; break;
            case "2": i = 2; break;
            case "3": i = 3; break;
            case "4": i = 4; break;
            case "5": i = 5; break;
            case "6": i = 6; break;
            default: i = -1;
        }

        return i;
    }

    private void table1ComponentAdded(ContainerEvent e) {
        // TODO add your code here
    }



    public void updateTabel(){
        DefaultTableModel model = (DefaultTableModel) table1.getModel();
        Object row_data[] = new Object[2];

        // Remove todos
        model.setRowCount(0);

        List<Componente> aux;

        try{
            aux = this.cf.getComponentes();
        }
        catch (Exception e){
            aux = new ArrayList<>();
        }

        // Adiciona novos
        for(Componente k : aux){
            if ((k.getComplementares().size() == 0) && (k.getIncompativeis().size() == 0)) {
                row_data[0] = k.getID();
                row_data[1] = k.getDesignacao();
                model.addRow(row_data);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner Evaluation license - Pedro Moreira
    private void initComponents() {
        nome_txt = new JTextField();
        jComboBox1 = new JComboBox<>();
        adicionar_btn = new JButton();
        label1 = new JLabel();
        label2 = new JLabel();
        label4 = new JLabel();
        preco_txt = new JTextField();
        button1 = new JButton();
        scrollPane1 = new JScrollPane();
        table1 = new JTable();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nova Componente");
        Container contentPane = getContentPane();

        //---- jComboBox1 ----
        jComboBox1.setModel(new DefaultComboBoxModel<>(new String[] {
            "1 - Pintura",
            "2 - Jantes",
            "3 - Pneus",
            "4 - Motoriza\u00e7\u00e3o",
            "5 - Vidros",
            "6 - Estofos"
        }));

        //---- adicionar_btn ----
        adicionar_btn.setText("Adicionar");
        adicionar_btn.addActionListener(e -> adicionar_btnActionPerformed(e));

        //---- label1 ----
        label1.setText("Nome");

        //---- label2 ----
        label2.setText("Tipo");

        //---- label4 ----
        label4.setText("Pre\u00e7o");

        //---- button1 ----
        button1.setText("Sair");
        button1.addActionListener(e -> sair_btnActionPerformed(e));

        //======== scrollPane1 ========
        {

            //---- table1 ----
            table1.setModel(new DefaultTableModel(
                new Object[][] {
                    {null, null, false, false},
                    {null, null, false, false},
                },
                new String[] {
                    "ID", "Designa\u00e7\u00e3o", "Complementar", "Incompat\u00edveis"
                }
            ) {
                Class<?>[] columnTypes = new Class<?>[] {
                    Object.class, Object.class, Boolean.class, Boolean.class
                };
                boolean[] columnEditable = new boolean[] {
                    false, false, true, true
                };
                @Override
                public Class<?> getColumnClass(int columnIndex) {
                    return columnTypes[columnIndex];
                }
                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return columnEditable[columnIndex];
                }
            });
            table1.addPropertyChangeListener(e -> table1PropertyChange(e));
            table1.addContainerListener(new ContainerAdapter() {
                @Override
                public void componentAdded(ContainerEvent e) {
                    table1ComponentAdded(e);
                }
            });
            scrollPane1.setViewportView(table1);
        }

        GroupLayout contentPaneLayout = new GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addGroup(contentPaneLayout.createParallelGroup()
                        .addGroup(contentPaneLayout.createSequentialGroup()
                            .addGroup(contentPaneLayout.createParallelGroup()
                                .addGroup(contentPaneLayout.createSequentialGroup()
                                    .addGap(55, 55, 55)
                                    .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                        .addComponent(label2)
                                        .addComponent(label4))
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(contentPaneLayout.createParallelGroup()
                                        .addComponent(jComboBox1, GroupLayout.PREFERRED_SIZE, 103, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(preco_txt)))
                                .addGroup(contentPaneLayout.createSequentialGroup()
                                    .addGap(51, 51, 51)
                                    .addComponent(label1)
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(nome_txt, GroupLayout.PREFERRED_SIZE, 104, GroupLayout.PREFERRED_SIZE)))
                            .addGap(30, 30, 30))
                        .addGroup(contentPaneLayout.createSequentialGroup()
                            .addGap(38, 38, 38)
                            .addComponent(button1, GroupLayout.PREFERRED_SIZE, 63, GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(adicionar_btn)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(scrollPane1, GroupLayout.PREFERRED_SIZE, 362, GroupLayout.PREFERRED_SIZE)
                    .addGap(22, 22, 22))
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                        .addComponent(scrollPane1, GroupLayout.PREFERRED_SIZE, 164, GroupLayout.PREFERRED_SIZE)
                        .addGroup(contentPaneLayout.createSequentialGroup()
                            .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(nome_txt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(label1))
                            .addGap(13, 13, 13)
                            .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(label2)
                                .addComponent(jComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(label4)
                                .addComponent(preco_txt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addGap(28, 28, 28)
                            .addGroup(contentPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(adicionar_btn)
                                .addComponent(button1))))
                    .addContainerGap(12, Short.MAX_VALUE))
        );
        pack();
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents



    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner Evaluation license - Pedro Moreira
    private JTextField nome_txt;
    private JComboBox<String> jComboBox1;
    private JButton adicionar_btn;
    private JLabel label1;
    private JLabel label2;
    private JLabel label4;
    private JTextField preco_txt;
    private JButton button1;
    private JScrollPane scrollPane1;
    private JTable table1;
    // End of variables declaration//GEN-END:variables
}
